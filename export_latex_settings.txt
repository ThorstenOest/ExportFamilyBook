a:23:{s:5:"_csrf";s:32:"i2ZyQgBa83klLt2OWC7i5XA3qcvRKEbJ";s:5:"refid";s:0:"";s:10:"ref_father";s:11:"\segoe{♂}";s:10:"ref_mother";s:11:"\segoe{♀}";s:8:"ref_wife";s:12:"\dejavu{⚭}";s:11:"ref_husband";s:12:"\dejavu{⚭}";s:7:"ref_son";s:12:"\segoe{👦}";s:12:"ref_daughter";s:12:"\segoe{👧}";s:8:"preamble";s:2015:"\documentclass[8pt,twocolumn,bibliography=totoc,listof=totoc,index=totoc]{scrbook}
\usepackage[paperwidth=17cm,paperheight=24cm,textwidth=13cm,textheight=20cm]{geometry}
%
\usepackage{underscore, morefloats}
%
\setlength{\columnsep}{0.7cm}
\setcapindent{0em}
\usepackage{fontspec,paralist,graphicx,grffile}
\usepackage[dvipsnames]{xcolor} % needed to create a line left of a text
\usepackage[framemethod=latex,usetwoside=false]{mdframed}
\newmdenv[topline=false,bottomline=false,rightline=false,%
linecolor=lightgray, linewidth=1pt,%
   leftmargin=1pt,%
   innerleftmargin=6pt,innerrightmargin=0pt,innertopmargin=0pt,innerbottommargin=0pt]{siderules}
   \mdfsetup{skipabove=2pt,skipbelow=2pt}
%
\setmainfont{Times New Roman}
\newfontfamily\DejaVuSans{DejaVu Sans}
\DeclareTextFontCommand{\dejavu}{\DejaVuSans}
\newfontfamily\Quivira{Quivira}
\DeclareTextFontCommand{\quivira}{\Quivira}
\newfontfamily\Segoe{Segoe UI Symbol}
\DeclareTextFontCommand{\segoe}{\Segoe}

\usepackage[ngerman]{babel} % deutsche Silbentrennung
\usepackage{makeidx} % fuer Stichwortverzeichnis
\addto\captionsngerman{\renewcommand{\bibname}{Quellenverzeichnis}}% only needed without biblatex
\makeindex

\usepackage[citecounter=true,backend=bibtex8,sorting=none]{biblatex} % use biblatex to include counter
\renewcommand{\finentrypunct}{%
  \addperiod\space
  (\arabic{citecounter}~Mal zitiert)%
}
\bibliography{\jobname} % include bibliography here when using biblatex

\makeatletter
% workaround to allow for spaces in figure names (see https://github.com/ho-tex/oberdiek/issues/31)
\def\Gread@@xetex#1{%
\IfFileExists{"\Gin@base".bb}%
   {\Gread@eps{\Gin@base.bb}}%
    {\Gread@@xetex@aux#1}%
}
% maximal width and height for includegraphics
%\def\maxwidth#1{\ifdim\Gin@nat@width>#1 #1\else\Gin@nat@width\fi}
%\def\maxheight#1{\ifdim\Gin@nat@height>#1 #1\else\Gin@nat@height\fi}
\makeatother
\renewcommand{\bibname}{Quellenangabe}
% make sure you use XeLaTex because UTF8 symbols are used
";s:5:"title";s:840:"\begin{document}
\frontmatter
\begin{titlepage}
	{\centering
	\vspace{2cm}
	\rule[-2ex]{0.9\textwidth}{1pt} \rule[2ex]{0.9\textwidth}{1pt} \par
	\vspace{0.5cm}
	{\scshape\Large Personenverzeichnis der\par}
	\vspace{0.5cm}
	{\huge\bfseries Familie XYZ\par}
	\vspace{0.5cm}
	{\scshape\Large und verbundener Familien mit Verwandtschaftsbezug auf\par}
	\vspace{0.5cm}
        {\Large\itshape <Name der Referenzperson>\par}
	\vspace{0.5cm}
	\rule[-2ex]{0.9\textwidth}{1pt} \rule[2ex]{0.9\textwidth}{1pt} \par
	\vfill
	% Hier kann ein Bild eingefügt werden
	\vfill
	{\large <URL der Seite> \par}
	\vspace{0.5cm}
% Bottom of the page
	{\large \today\par}}
	\newpage
	\vspace*{\fill}
	<Informationen zum Buch>
\end{titlepage}

\tableofcontents 
\chapter{Legende}\GedcomLegende

\setlength\parindent{0pt}
\mainmatter";s:34:"individuals_summary_label_template";s:192:"<>@&
<<<@SurName@< (@ForeachNAME&_MARNM@@SurName@, @EndForeach@@Remove&, @)><, @FactTITL@ @GivenName@ @NickName@><\textsuperscript{@Id&xref@ S.\pageref{@Id&xref@}}>>>: \segoe{🔗} @Link@\\ >";s:26:"individuals_label_template";s:3981:"<>@&
<\makebox[0pt][r]{@Ancestor&\segoe{👤} &\segoe{👪} @}>\textbf{@SurName@< (@ForeachNAME&_MARNM@@SurName@, @EndForeach@@Remove&, @)><, @FactTITL@ @GivenName@ <"@NickName@">>}< \textsuperscript{@Id&xref@}>
<\index{@SurName@<, @GivenName@><*@BirthDate&%Y@ ><\dejavu{†}@DeathDate&%Y@>}>
<\label{@Id&xref@}>
<\cite{@ForeachReference@@FeReferenceName@,@EndForeach@@Remove&,@}>\\* 
<\segoe{🔗} @Link@\\ >

<<*@BirthDate@ <in @BirthPlace@> >
<\dejavu{†}@DeathDate@ <in @DeathPlace@>>\\ >
@ForeachFAMC@
  <<\quivira{👥}~<@FatherGivenName&1@ >@FatherSurName@< \textsuperscript{@FatherId&xref@ S.\pageref{@FatherId&xref@}}>>
  < und <@MotherGivenName&1@ >@MotherSurName@< \textsuperscript{@MotherId&xref@ S.\pageref{@MotherId&xref@}}>><< (@FeStepparents@)>>\\ >
  <\begin{siderules}
    @ForeachFactOuter&RESI,PROP,_MEDC,FACT,EVEN&CHIL,HUSB,WIFE,CHAN,MARR,NOTE,SOUR,OBJE,_TODO@
       @ForeachFactInner@@FeFactType&IfExist&&:@ @FeFactValue@ @FeFactDate@  <in @FeFactPlace@>
          @ForeachAttributeOuter&AGNC,ADDR,PHON,CAUS,TYPE,AGE@@FeAttributeType&IfExist&, &:@
               @FeFactAttribute@
          @EndForeach@ 
          <\dejavu{✎}\textit{ @FeFactNote@}\\ > 
       @EndForeach@
    @EndForeach@
    @ForeachFactOuter&NOTE&all@
       @ForeachFactInner@ <@FeFactType&IfExist@ 
               \textit{@FeFactValue@}\\ > 
       @EndForeach@
    @EndForeach@
    @Remove&\\ @
   \end{siderules}>
@EndForeach@

@ForeachFAMS@
  \dejavu{⚭}@Marriage@@MarriageDate@ <@SpouseGivenName&1@ >
  @SpouseSurName@< \textsuperscript{@SpouseId&xref@ S.\pageref{@SpouseId&xref@}}>: 
  <\begin{siderules}
     <\begin{compactenum}
         @ForeachChildren@ \item <@GivenName&1@ >@SurName@
            < \textsuperscript{@Id&xref@ S.\pageref{@Id&xref@}}>< *@BirthDate@>< \dejavu{†}@DeathDate@>< (@FeStepchild@)>
         @EndForeach@
      \end{compactenum}>
      @ForeachFactOuter&RESI,PROP,_MEDC,FACT,EVEN&CHIL,HUSB,WIFE,CHAN,MARR,NOTE,SOUR,OBJE,_TODO@
         @ForeachFactInner@@FeFactType&IfExist&&:@ @FeFactValue@ @FeFactDate@  <in @FeFactPlace@>
            @ForeachAttributeOuter&AGNC,ADDR,PHON,CAUS,TYPE,AGE@@FeAttributeType&IfExist&, &:@ 
                @FeFactAttribute@@EndForeach@ <\dejavu{✎}\textit{ @FeFactNote@}\\ > 
            @EndForeach@
         @EndForeach@
         @ForeachFactOuter&NOTE&all@@ForeachFactInner@ <@FeFactType&IfExist@ 
            \textit{@FeFactValue@}\\ > 
         @EndForeach@
      @EndForeach@
      @Remove&\\ @
     \end{siderules}>
@Replace&:&\\ @ 
@EndForeach@

@ForeachFactOuter&NAME,BIRT,DEAT&all@
  @ForeachFactInner@@FeFactType&IfExist@ 
    @ForeachAttributeOuter&ADDR,AGNC@@FeFactAttribute@
    @EndForeach@ 
    <\dejavu{✎}\textit{ @FeFactNote@}\\ > 
  @EndForeach@
@EndForeach@

@ForeachFactOuter&CAST,CHR,BAPM,BURI,ADOP,NCHI,NMR,EDUC,GRAD,OCCU,_MILT,_MILI,IMMI,NATU,RETI,RESI,PROP,_MEDC,NATI,EMIG,RELI,CONF,FACT,EVEN,WWW,DSCR&NAME,BIRT,DEAT,FAMS,FAMC,NOTE,SEX,SOUR,CHAN,OBJE,_TODO@
  @ForeachFactInner@ 
    <@FeFactType&IfExist&&:@ @FeFactValue@ @FeFactDate@  <in @FeFactPlace@>
    @ForeachAttributeOuter&AGNC,ADDR,PHON,CAUS,TYPE,AGE@@FeAttributeType&IfExist&, &:@ 
       @FeFactAttribute@
    @EndForeach@ 
    <\dejavu{✎}\textit{ @FeFactNote@}>\\ >
  @EndForeach@
@EndForeach@

@ForeachFactOuter&NOTE&all@
  @ForeachFactInner@ <ausgesteuert <<@FeFactType&IfExist@ \textit{@FeFactValue@}\\ >>>
  @EndForeach@
@EndForeach@

<Verwandtschaft: @Reference@\\>

<\segoe{📷} 
@ForeachMedia&photo&jpg,png,pdf@
  \ref{fig:@FeMediaId@}
@EndForeach@>
@Remove&\\*&\\@

@ForeachMedia&photo&jpg,png,pdf&unique@
  <\begin{figure}[!htbp]\centering
     \includegraphics[width=\linewidth,height=0.25\textheight,keepaspectratio]{\detokenize{C:/xampp/htdocs/webtrees/data/media/@FeMediaFile&NoExtension@}}
     <\caption{@FeMediaCaption@}>
     \label{fig:@FeMediaId@}
    \end{figure}>
@EndForeach@
@Remove&\\@

\bigskip
\par";s:6:"epilog";s:118:"%\bibliographystyle{plain}
%\bibliography{\jobname}
\printbibliography
%\listoffigures
\printindex
\end{document}";s:12:"branch_seeds";s:4:";,
";s:7:"symbols";s:718:";Direkter Vor- oder Nachfahre (\segoe{♂}-Vater, \segoe{♀}-Mutter, \segoe{👦}-Sohn, \segoe{👧}-Tochter, \dejavu{⚭}-Ehemann oder Ehefrau);\segoe{👤};L
Direkter Nachfahre eines direkten Vorfahren;\segoe{👪};L
Verbindung zu einem anderen Familienzweig;\segoe{🔗};L
CAST;\quivira{🜲}
BIRT;*;L
CHR;\quivira{〰};L
DEAT;\dejavu{†};L
BURI;\dejavu{▯};L
Heirat;\dejavu{⚭};L
RELI;\quivira{⛪};L
EDUC;\segoe{🎓};L
OCCU;\dejavu{⚒};L
AGNC;\quivira{🏭};L;Institution
RESI;\quivira{🏠};L
ADDR;\quivira{✉};L
PHON;\dejavu{☏};L
PROP;\segoe{💰};L
PLAC;in
_MILI;\dejavu{⚔};L
_MILT;\dejavu{⚔}
_MEDC;\segoe{💉};L
NOTE;\dejavu{✎};L
DSCR;\segoe{📖};L
WWW;\quivira{🌍};L";s:13:"include_media";s:0:"";s:13:"exclude_media";s:0:"";s:19:"default_date_format";s:8:"%j.%n.%Y";s:20:"default_place_format";s:16:"1,-1/Deutschland";s:16:"hierarchy_branch";s:1:"{";s:20:"hierarchy_sub_branch";s:9:"\chapter{";s:20:"hierarchy_generation";s:25:"\subsubsection{Generation";s:10:"mod_action";s:23:"download_settings_latex";}